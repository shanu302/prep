/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode *> s;
        TreeNode *previous = nullptr, *r = root;
        vector<int> v;
        do
        {
            while(r != nullptr)
            {     s.push(r);
                r = r->left;
            }
            
        while(r == nullptr && !s.empty())
        {
            r = s.top();
            if(r->right == nullptr || r->right == previous)
            {
                v.push_back(r->val);
                s.pop();
                previous = r;
                r = nullptr;
            }
            else
                r = r->right;
        }
        }while(!s.empty());
        return v;
    }
};
